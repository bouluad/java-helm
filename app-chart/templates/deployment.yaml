apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}-{{ .Values.env }}
  labels:
    app: {{ .Values.name }}-{{ .Values.env }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}-{{ .Values.env }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}-{{ .Values.env }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - containerPort: 8080
{{- if .Values.envConfigMap }}
          envFrom:
            - configMapRef:
                name: {{ .Values.name }}-{{ .Values.env }}-configmap
{{- end }}
{{- if .Values.secrets }}
            - secretRef:
                name: {{ .Values.name }}-{{ .Values.env }}-secrets
{{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /config
            - name: properties-volume
              mountPath: /path/to/application.properties
      volumes:
        - name: config-volume
{{- if .Values.envConfigMap }}
          configMap:
            name: {{ .Values.name }}-{{ .Values.env }}-configmap
{{- else }}
          emptyDir: {}
{{- end }}
        - name: properties-volume
{{- if .Values.secrets }}
          secret:
            secretName: {{ .Values.name }}-{{ .Values.env }}-secrets
{{- else }}
          emptyDir: {}
{{- end }}
